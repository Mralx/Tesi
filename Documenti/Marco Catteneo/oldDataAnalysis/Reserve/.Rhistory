dimnames(buddy_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
dimnames(utility_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
dimnames(preserve_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
dimnames(strategy_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
reserve_metrics = reserve_metrics[-which(reserve_metrics$Availability==0),]
divide_metrics = divide_metrics[-which(divide_metrics$Availability==0),]
buddy_metrics = buddy_metrics[-which(buddy_metrics$Availability==0),]
#utility_metrics = utility_metrics[-which(utility_metrics$Availability==0),]
preserve_metrics = reserve_metrics[-which(preserve_metrics$Availability==0),]
strategy_metrics = strategy_metrics[-which(strategy_metrics$Availability==0),]
reserve_metrics = reserve_metrics[-which(reserve_metrics$Interference==0),]
divide_metrics = divide_metrics[-which(divide_metrics$Interference==0),]
buddy_metrics = buddy_metrics[-which(buddy_metrics$Interference==0),]
#utility_metrics = utility_metrics[-which(utility_metrics$Interference==0),]
preserve_metrics = reserve_metrics[-which(preserve_metrics$Interference==0),]
strategy_metrics = strategy_metrics[-which(strategy_metrics$Interference==0),]
ENV_COUNT = 6
attach(prserve_metrics)
n = dim(divide_metrics)[[1]]
inter_environments = c()
av_environments = c()
dec_environments = c()
for(i in 1:ENV_COUNT){
inter_curr_env = sum(Interference[Environment==i])/length(Interference[Environment==i])
av_curr_env = sum(Availability[Environment==i])/length(Availability[Environment==i])
dec_curr_env = sum(Decision_time[Environment==i])/length(Decision_time[Environment==i])
inter_environments = c(inter_environments,inter_curr_env)
av_environments = c(av_environments,av_curr_env)
dec_environments = c(dec_environments,dec_curr_env)
}
temp_av = av_environments
temp_inter = inter_environments
temp_dec = dec_environments
detach(preserve_metrics)
attach(strategy_metrics)
ENV_COUNT = 6
inter_environments = c()
av_environments = c()
dec_environments = c()
for(i in 1:ENV_COUNT){
inter_curr_env = sum(Interference[Environment==i])/length(Interference[Environment==i])
av_curr_env = sum(Availability[Environment==i])/length(Availability[Environment==i])
dec_curr_env = sum(Decision_time[Environment==i])/length(Decision_time[Environment==i])
inter_environments = c(inter_environments,inter_curr_env)
av_environments = c(av_environments,av_curr_env)
dec_environments = c(dec_environments,dec_curr_env)
}
detach(strategy_metrics)
comparison = data.frame(temp_av,temp_inter,temp_dec,
av_environments,inter_environments,dec_environments)
dimnames(comparison)[[2]] = c("Availability_A","Interference_A","Decision_A",
"Availability_B","Interference_B","Decision_B")
attach(comparison)
p1 = plot_ly(comparison, x = ~c(1,2,3,4,5,6), y = ~Availability_A,
type = 'scatter',
mode = 'lines+markers',
name = 'Proactive reserve',
line = list(color = 'rgb(6, 160, 8)')) %>%
add_trace(y = ~Availability_B, name = 'Proactive buddy', line = list(color = 'rgb(255, 187, 0)', width = 2)) %>%
layout(title = "Availability",
xaxis = list(title = "Environments"),
yaxis = list (title = "Availability [distance]"))
p2 = plot_ly(comparison, x = ~c(1,2,3,4,5,6), y = ~Interference_A,
type = 'scatter',
mode = 'lines+markers',
name = 'Proactive reserve',
line = list(color = 'rgb(6, 160, 8)')) %>%
add_trace(y = ~Interference_B, name = 'Proactive buddy', line = list(color = 'rgb(255, 187, 0)', width = 2)) %>%
layout(title = "Interference",
xaxis = list(title = "Environments"),
yaxis = list (title = "Interference [distance]"))
p3 = plot_ly(comparison, x = ~c(1,2,3,4,5,6), y = ~Decision_A/3000,
type = 'scatter',
mode = 'lines+markers',
name = 'Proactive reserve',
line = list(color = 'rgb(6, 160, 8)')) %>%
add_trace(y = ~Decision_B/3000, name = 'Proactive buddy', line = list(color = 'rgb(255, 187, 0)', width = 2)) %>%
layout(title = "Decision time",
xaxis = list(title = "Environments"),
yaxis = list (title = "Decision time [s]"))
print(p1)
print(p2)
print(p3)
detach(comparison)
#########################################
#        THESIS: RESULTS ANALYSIS       #
#For multi-robot coordination strategies#
#########################################
#-->PREPROCESSING
#1.Input data
reserve_metrics = read.table("../Reserve/ReserveMetrics.txt")
divide_metrics = read.table("../DivideAndConquer/DivideMetrics.txt")
buddy_metrics = read.table("../BuddySystem/BuddyMetrics.txt")
utility_metrics = read.table("../UtilityBased/UtilityMetrics.txt")
preserve_metrics = read.table("../ProactiveReserve/ProactiveReserveMetrics.txt")
strategy_metrics = read.table("../ProactiveBuddySystem/ProactiveBuddyMetrics.txt")
#2.Re-naming
dimnames(reserve_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
dimnames(divide_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
dimnames(buddy_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
dimnames(utility_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
dimnames(preserve_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
dimnames(strategy_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
reserve_metrics = reserve_metrics[-which(reserve_metrics$Availability==0),]
divide_metrics = divide_metrics[-which(divide_metrics$Availability==0),]
buddy_metrics = buddy_metrics[-which(buddy_metrics$Availability==0),]
#utility_metrics = utility_metrics[-which(utility_metrics$Availability==0),]
preserve_metrics = reserve_metrics[-which(preserve_metrics$Availability==0),]
strategy_metrics = strategy_metrics[-which(strategy_metrics$Availability==0),]
reserve_metrics = reserve_metrics[-which(reserve_metrics$Interference==0),]
divide_metrics = divide_metrics[-which(divide_metrics$Interference==0),]
buddy_metrics = buddy_metrics[-which(buddy_metrics$Interference==0),]
#utility_metrics = utility_metrics[-which(utility_metrics$Interference==0),]
preserve_metrics = reserve_metrics[-which(preserve_metrics$Interference==0),]
strategy_metrics = strategy_metrics[-which(strategy_metrics$Interference==0),]
#3.Computing summaries
ENV_COUNT = 6
attach(preserve_metrics)
n = dim(divide_metrics)[[1]]
inter_environments = c()
av_environments = c()
dec_environments = c()
for(i in 1:ENV_COUNT){
inter_curr_env = sum(Interference[Environment==i])/length(Interference[Environment==i])
av_curr_env = sum(Availability[Environment==i])/length(Availability[Environment==i])
dec_curr_env = sum(Decision_time[Environment==i])/length(Decision_time[Environment==i])
inter_environments = c(inter_environments,inter_curr_env)
av_environments = c(av_environments,av_curr_env)
dec_environments = c(dec_environments,dec_curr_env)
}
temp_av = av_environments
temp_inter = inter_environments
temp_dec = dec_environments
detach(preserve_metrics)
attach(strategy_metrics)
ENV_COUNT = 6
inter_environments = c()
av_environments = c()
dec_environments = c()
for(i in 1:ENV_COUNT){
inter_curr_env = sum(Interference[Environment==i])/length(Interference[Environment==i])
av_curr_env = sum(Availability[Environment==i])/length(Availability[Environment==i])
dec_curr_env = sum(Decision_time[Environment==i])/length(Decision_time[Environment==i])
inter_environments = c(inter_environments,inter_curr_env)
av_environments = c(av_environments,av_curr_env)
dec_environments = c(dec_environments,dec_curr_env)
}
detach(strategy_metrics)
comparison = data.frame(temp_av,temp_inter,temp_dec,
av_environments,inter_environments,dec_environments)
dimnames(comparison)[[2]] = c("Availability_A","Interference_A","Decision_A",
"Availability_B","Interference_B","Decision_B")
attach(comparison)
p1 = plot_ly(comparison, x = ~c(1,2,3,4,5,6), y = ~Availability_A,
type = 'scatter',
mode = 'lines+markers',
name = 'Proactive reserve',
line = list(color = 'rgb(6, 160, 8)')) %>%
add_trace(y = ~Availability_B, name = 'Proactive buddy', line = list(color = 'rgb(255, 187, 0)', width = 2)) %>%
layout(title = "Availability",
xaxis = list(title = "Environments"),
yaxis = list (title = "Availability [distance]"))
p2 = plot_ly(comparison, x = ~c(1,2,3,4,5,6), y = ~Interference_A,
type = 'scatter',
mode = 'lines+markers',
name = 'Proactive reserve',
line = list(color = 'rgb(6, 160, 8)')) %>%
add_trace(y = ~Interference_B, name = 'Proactive buddy', line = list(color = 'rgb(255, 187, 0)', width = 2)) %>%
layout(title = "Interference",
xaxis = list(title = "Environments"),
yaxis = list (title = "Interference [distance]"))
p3 = plot_ly(comparison, x = ~c(1,2,3,4,5,6), y = ~Decision_A/3000,
type = 'scatter',
mode = 'lines+markers',
name = 'Proactive reserve',
line = list(color = 'rgb(6, 160, 8)')) %>%
add_trace(y = ~Decision_B/3000, name = 'Proactive buddy', line = list(color = 'rgb(255, 187, 0)', width = 2)) %>%
layout(title = "Decision time",
xaxis = list(title = "Environments"),
yaxis = list (title = "Decision time [s]"))
print(p1)
print(p2)
print(p3)
detach(comparison)
reserve_metrics = read.table("../Reserve/ReserveMetrics.txt")
utility_metrics = read.table("../DivideAndConquer/DivideMetrics.txt")
View(reserve_metrics)
dimnames(utility_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
dimnames(reserve_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
View(utility_metrics)
reserve_env_3 = reserve_metrics[reserve_metrics$Environment==1,]
View(reserve_env_3)
reserve_env_3 = reserve_metrics[reserve_metrics$Environment==3,]
View(reserve_env_3)
reserve_env_5 = reserve_metrics[reserve_metrics$Environment==5,]
utility_env_3 = utility_metrics[utility_metrics$Environment==3,]
utility_env_5 = utility_metrics[utility_metrics$Environment==5,]
View(utility_env_5)
1 in c(1:3)
contains(c(1:3),1)
reserve_env_3 = reserve_metrics[reserve_metrics$Environment==3&&reserve_metrics$Agent=='A',]
class(reserve_metrics$Agent)
reserve_metrics$Agent[1]
reserve_metrics$Agent[1]=='A'
reserve_env_3 = reserve_env_3[reserve_env_3$Agent=='A',]
reserve_env_3 = reserve_metrics[reserve_metrics$Environment==3,]
reserve_env_3 = reserve_env_3[reserve_env_3$Agent=='A',]
View(reserve_env_3)
reserve_env_3 = reserve_env_3[reserve_env_3$Agent=='A',]
reserve_env_5 = reserve_env_5[reserve_env_5$Agent=='A',]
utility_env_3 = utility_env_3[utility_env_3$Agent=='A',]
utility_env_5 = utility_env_5[utility_env_5$Agent=='A',]
View(reserve_env_5)
p1 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(6, 160, 8)'))
print(p1)
unique(c(1,2,3,4,5))
unique(c(1,2,3,4,5,6,1,1,1))
View(reserve_env_3)
unique(reserve_env_3$Exp_cycle)
which(reserve_metrics$Exp_cycle==414)
reserve_metrics[which(reserve_metrics$Exp_cycle==414),]
reserve_env_3 = reserve_env_3[reserve_env_3$Exp_cycle<200,]
reserve_env_5 = reserve_env_5[reserve_env_5$Exp_cycle<300,]
utility_env_3 = utility_env_3[utility_env_3$Exp_cycle<200,]
utility_env_5 = utility_env_5[utility_env_5$Exp_cycle<300,]
reserve_env_3[which(reserve_env_3$Exp_cycle==414),]
p1 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(6, 160, 8)'))
print(p1)
reserve_env_3 = reserve_env_3[!duplicated(reserve_env_3$Exp_cycle),]
View(reserve_env_3)
p1 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(6, 160, 8)'))
print(p1)
utility_env_3 = utility_env_3[!duplicated(utility_env_3$Exp_cycle),]
p1 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(6, 160, 8)')) %>%
add_trace(y = ~utility_env_3$Interference, name = 'Proactive buddy', line
= list(color = 'rgb(255, 187, 0)', width = 2))
print(p1)
reserve_env_3 = reserve_env_3[reserve_env_3$Exp_cycle<150,]
utility_env_3 = utility_env_3[utility_env_3$Exp_cycle<150,]
reserve_env_3 = reserve_env_3[!duplicated(reserve_env_3$Exp_cycle),]
utility_env_3 = utility_env_3[!duplicated(utility_env_3$Exp_cycle),]
p1 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(6, 160, 8)')) %>%
add_trace(y = ~utility_env_3$Interference, name = 'Proactive buddy', line = list(color = 'rgb(255, 187, 0)', width = 2))
print(p1)
reserve_env_3 = reserve_env_3[reserve_env_3$Exp_cycle<75,]
utility_env_3 = utility_env_3[utility_env_3$Exp_cycle<75,]
reserve_env_3 = reserve_env_3[!duplicated(reserve_env_3$Exp_cycle),]
utility_env_3 = utility_env_3[!duplicated(utility_env_3$Exp_cycle),]
p1 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_3$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))
print(p1)
p1 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_3$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p1)
p1 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_3$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 3 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p1)
reserve_env_5 = reserve_env_5[!duplicated(reserve_env_4$Exp_cycle),]
reserve_env_5 = reserve_env_5[!duplicated(reserve_env_5$Exp_cycle),]
utility_env_5 = utility_env_5[!duplicated(utility_env_5$Exp_cycle),]
p1 = plot_ly(reserve_env_5, x = ~reserve_env_5$Exp_cycle, y = ~reserve_env_5$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_5$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p1)
reserve_env_5 = reserve_env_5[reserve_env_5$Exp_cycle<110,]
utility_env_5 = utility_env_5[utility_env_5$Exp_cycle<110,]
reserve_env_5 = reserve_env_5[!duplicated(reserve_env_5$Exp_cycle),]
utility_env_5 = utility_env_5[!duplicated(utility_env_5$Exp_cycle),]
p1 = plot_ly(reserve_env_5, x = ~reserve_env_5$Exp_cycle, y = ~reserve_env_5$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_5$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p1)
p1 = plot_ly(reserve_env_5, x = ~reserve_env_5$Exp_cycle, y = ~1/reserve_env_5$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~1/utility_env_5$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p1)
p5 = plot_ly(reserve_env_5, x = ~reserve_env_5$Exp_cycle, y = ~reserve_env_5$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Utility',
line = list(color = 'rgb(6, 160, 8)')) %>%
add_trace(y = ~utility_env_5$Interference, name = 'Reserve', line = list(color = 'rgb(0, 8, 255)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p5)
p5 = plot_ly(reserve_env_5, x = ~reserve_env_5$Exp_cycle, y = ~reserve_env_5$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_5$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p5)
reserve_env_5 = reserve_env_5[reserve_env_5$Exp_cycle<160,]
utility_env_5 = utility_env_5[utility_env_5$Exp_cycle<160,]
reserve_env_5 = reserve_env_5[!duplicated(reserve_env_5$Exp_cycle),]
utility_env_5 = utility_env_5[!duplicated(utility_env_5$Exp_cycle),]
p3 = plot_ly(reserve_env_3, x = ~reserve_env_5$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_3$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
p5 = plot_ly(reserve_env_5, x = ~reserve_env_5$Exp_cycle, y = ~reserve_env_5$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_5$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p3)
p3 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_3$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p3)
print(p5)
reserve_env_5 = reserve_env_5[reserve_env_5$Exp_cycle<250,]
utility_env_5 = utility_env_5[utility_env_5$Exp_cycle<250,]
reserve_env_5 = reserve_env_5[!duplicated(reserve_env_5$Exp_cycle),]
utility_env_5 = utility_env_5[!duplicated(utility_env_5$Exp_cycle),]
p5 = plot_ly(reserve_env_5, x = ~reserve_env_5$Exp_cycle, y = ~reserve_env_5$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_5$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p5)
utility_metrics = read.table("../DivideAndConquer/DivideMetrics.txt")
reserve_metrics = read.table("../Reserve/ReserveMetrics.txt")
dimnames(utility_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
dimnames(reserve_metrics)[[2]] = c("Environment","Agent","Exp_cycle",
"Interference","Availability","Decision_time")
reserve_env_3 = reserve_metrics[reserve_metrics$Environment==3,]
reserve_env_5 = reserve_metrics[reserve_metrics$Environment==5,]
utility_env_3 = utility_metrics[utility_metrics$Environment==3,]
utility_env_5 = utility_metrics[utility_metrics$Environment==5,]
reserve_env_3 = reserve_env_3[reserve_env_3$Agent=='A',]
reserve_env_5 = reserve_env_5[reserve_env_5$Agent=='A',]
utility_env_3 = utility_env_3[utility_env_3$Agent=='A',]
utility_env_5 = utility_env_5[utility_env_5$Agent=='A',]
reserve_env_3 = reserve_env_3[!duplicated(reserve_env_3$Exp_cycle),]
reserve_env_5 = reserve_env_5[!duplicated(reserve_env_5$Exp_cycle),]
utility_env_3 = utility_env_3[!duplicated(utility_env_3$Exp_cycle),]
utility_env_5 = utility_env_5[!duplicated(utility_env_5$Exp_cycle),]
p3 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_3$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p3)
reserve_env_3 = reserve_env_3[reserve_env_3$Exp_cycle<200,]
utility_env_3 = utility_env_3[utility_env_3$Exp_cycle<200,]
p3 = plot_ly(reserve_env_3, x = ~reserve_env_3$Exp_cycle, y = ~reserve_env_3$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_3$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p3)
reserve_env_5 = reserve_env_5[reserve_env_5$Exp_cycle<250,]
utility_env_5 = utility_env_5[utility_env_5$Exp_cycle<250,]
p5 = plot_ly(reserve_env_5, x = ~reserve_env_5$Exp_cycle, y = ~reserve_env_5$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_5$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p5)
reserve_env_5 = reserve_env_5[reserve_env_5$Exp_cycle<200,]
utility_env_5 = utility_env_5[utility_env_5$Exp_cycle<200,]
reserve_env_5 = reserve_env_5[!duplicated(reserve_env_5$Exp_cycle),]
utility_env_5 = utility_env_5[!duplicated(utility_env_5$Exp_cycle),]
p5 = plot_ly(reserve_env_5, x = ~reserve_env_5$Exp_cycle, y = ~reserve_env_5$Interference,
type = 'scatter',
mode = 'lines+markers',
name = 'Reserve',
line = list(color = 'rgb(0, 8, 255)')) %>%
add_trace(y = ~utility_env_5$Interference, name = 'Utility', line = list(color = 'rgb(6, 160, 8)', width = 2))%>%
layout(title = "Environment 5 - Interference",
xaxis = list(title = "Exploration step"),
yaxis = list (title = "Interference [distance]"))
print(p5)
reserve_summary = read.table("../ProactiveReserve/ProactiveReserveSummary.txt")
divide_summary = read.table("../ProactiveBuddySystem/ProactiveBuddySummary.txt")
buddy_summary = read.table("../SideFollower/SideSummary.txt")
utility_summary = read.table("../DirectOptimization/DirectSummary.txt")
reserve_summary = read.table("../ProactiveReserve/ProactiveReserveSummary.txt")
size_summary = read.table("../ProactiveBuddySystem/ProactiveBuddySummary.txt")
buddy_summary = read.table("../SideFollower/SideSummary.txt")
direct_summary = read.table("../DirectOptimization/DirectSummary.txt")
View(buddy_summary)
View(buddy_summary)
p = plot_ly(reserve_summary, x = ~reserve_summary$Team_size[Environment==1], y = ~reserve_summary$Avg_exp_time[Environment==1],
type = 'scatter',
mode = 'lines+markers',
name = 'Proactive reserve',
line = list(color = 'rgb(255, 187, 0)')) %>%
add_trace(y = ~size_summary$Avg_exp_time[Environment==1], name = 'Side follower', line = list(color = 'rgb(0, 8, 255)', width = 1, dash='dot')) %>%
add_trace(y = ~buddy_summary$Avg_exp_time[Environment==1], name = 'Proactive buddy', line = list(color = 'rgb(255, 0, 0)', width = 1, dash='dot')) %>%
add_trace(y = ~direct_summary$Avg_exp_time[Environment==1], name = 'Direct optimization', line = list(color = 'rgb(170, 11, 109)', width = 1, dash='dot')) %>%
layout(title = "Environment 1",
xaxis = list(title = "Team size [number of robots]"),
yaxis = list (title = "Exploration time [seconds]"))
print(p)
p = plot_ly(reserve_summary, x = ~reserve_summary$Team_size[Environment==2], y = ~reserve_summary$Avg_exp_time[Environment==1],
type = 'scatter',
mode = 'lines+markers',
name = 'Proactive reserve',
line = list(color = 'rgb(255, 187, 0)')) %>%
add_trace(y = ~size_summary$Avg_exp_time[Environment==2], name = 'Side follower', line = list(color = 'rgb(0, 8, 255)', width = 1)) %>%
add_trace(y = ~buddy_summary$Avg_exp_time[Environment==2], name = 'Proactive buddy', line = list(color = 'rgb(255, 0, 0)', width = 1)) %>%
add_trace(y = ~direct_summary$Avg_exp_time[Environment==2], name = 'Direct optimization', line = list(color = 'rgb(170, 11, 109)', width = 1)) %>%
layout(title = "Environment 1",
xaxis = list(title = "Team size [number of robots]"),
yaxis = list (title = "Exploration time [seconds]"))
print(p)
